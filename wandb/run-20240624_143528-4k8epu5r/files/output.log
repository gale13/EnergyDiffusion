Traceback (most recent call last):
  File "main.py", line 110, in <module>
    result = offpolicy_trainer(
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/trainer/offpolicy.py", line 133, in offpolicy_trainer
    return OffpolicyTrainer(*args, **kwargs).run()
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/trainer/base.py", line 441, in run
    deque(self, maxlen=0)  # feed the entire iterator into a zero-length deque
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/trainer/base.py", line 252, in __iter__
    self.reset()
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/trainer/base.py", line 237, in reset
    test_result = test_episode(
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/trainer/utils.py", line 27, in test_episode
    result = collector.collect(n_episode=n_episode)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/tianshou/data/collector.py", line 297, in collect
    result = self.policy(self.data, last_state)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/lxy/energydiffusion/policy/diffusion_opt.py", line 127, in forward
    logits, hidden = model_(obs_), None
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/lxy/energydiffusion/diffusion/diffusion.py", line 235, in forward
    return self.sample(state, *args, **kwargs)
  File "/lxy/energydiffusion/diffusion/diffusion.py", line 186, in sample
    action = self.p_sample_loop(state, shape, *args, **kwargs)
  File "/lxy/energydiffusion/diffusion/diffusion.py", line 156, in p_sample_loop
    x = self.p_sample(x, timesteps, state)
  File "/lxy/energydiffusion/diffusion/diffusion.py", line 123, in p_sample
    model_mean, _, model_log_variance = self.p_mean_variance(x=x, t=t, s=s)
  File "/lxy/energydiffusion/diffusion/diffusion.py", line 108, in p_mean_variance
    x_recon = self.predict_start_from_noise(x, t=t, noise=self.model(x, t, s))
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/lxy/energydiffusion/diffusion/model.py", line 158, in forward
    x = self.up1(x5, x4)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 948, in forward
    output_padding = self._output_padding(
  File "/opt/conda/envs/gdmopt/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 640, in _output_padding
    raise ValueError(
ValueError: ConvTranspose2D: for 4D input, output_size must have 2 or 4 elements (got 1)